### Tasks to create Gitea server

  - name: create gitea
    shell: "echo '{{ gitea_yml }}' | {{ kubeatns }} apply -f -"
    ignore_errors: True
    vars:
      gitea_yml: |-
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: gitea
          labels:
            app: gitea
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: gitea
          template:
            metadata:
              labels:
                app: gitea
            spec:
              containers:
              - name: gitea
                image: gitea/gitea:1.14.2
                ports:
                - containerPort: 3000
                  name: gitea
                - containerPort: 22
                  name: git-ssh
                volumeMounts:
                - mountPath: /data
                  name: git-data
                resources:
                    limits:
                        cpu:      2
                        memory:   4Gi
              volumes:
              - name: git-data
                persistentVolumeClaim:
                  claimName: gitea-pvc
        ---
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: gitea-pvc
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
              
        ---
        kind: Service
        apiVersion: v1
        metadata:
          name: gitea-service
          labels:
            hpecp.hpe.com/hpecp-internal-gateway: "true"
        spec:
          selector:
            app: gitea
          ports:
          - name: http
            port: 3000
          - name: ssh
            port: 22
          type: NodePort

  - shell: "{{ kubeatns }} get pods -l app=gitea | grep -v NAME"
    register: gitea_pod_out
    until: '"Running" in gitea_pod_out.stdout.split()'
    delay: 5
    retries: 120 # should be "Running" in 10 minutes, adjust accordingly
  - set_fact: 
      gitea_pod: "{{ gitea_pod_out.stdout.split()[0] }}"
  - shell: "{{ kubeatns }} get service gitea-service -o 'jsonpath={..annotations.hpecp-internal-gateway/3000}'"
    register: gitea_url
  - set_fact: 
      external_port: "{{ gitea_url.stdout.split(':')[1] }}"

  - wait_for: ## Not sure if this is needed - port service/mapping is available once created
      host: "{{ gateway_pub_dns }}"
      port: "{{ external_port }}"

  # - shell: "{{ kubeatns }} exec {{ gitea_pod }} -- /bin/bash -c '{{ gitea_cmds }}'"
  #   vars: 
  #     url_data: "db_type=SQLite3&db_host=localhost%3A3306&db_user=root&db_passwd=&db_name=gitea&ssl_mode=disable&db_schema=&charset=utf8&db_path=%2Fdata%2Fgitea%2Fgitea.db&app_name=Gitea%3A+Git+with+a+cup+of+tea&repo_root_path=%2Fdata%2Fgit%2Frepositories&lfs_root_path=%2Fdata%2Fgit%2Flfs&run_user=git&domain={{ gateway_pub_dns }}&ssh_port=22&http_port=3000&app_url={{ gitea_url.stdout }}&log_root_path=%2Fdata%2Fgitea%2Flog&smtp_host=&smtp_from=&smtp_user=&smtp_passwd=&enable_federated_avatar=on&no_reply_address=&password_algorithm=pbkdf2&admin_name=&admin_passwd=&admin_confirm_passwd=&admin_email="
  #     gitea_cmds: |-
  #       curl -s -d "{{ url_data }}" http://localhost:3000 &&
  #       (su git -c \'gitea admin user create --username "administrator" --password "admin123" --email "admin@samdom.example.com" --admin --must-change-password=false\' || true) &&
  #       (su git -c \'gitea admin user create --username "ad_admin1" --password "pass123" --email "ad_admin1@samdom.example.com" --must-change-password=false\' || true) &&
  #       (su git -c \'gitea admin user create --username "ad_user1" --password "pass123" --email "ad_user1@samdom.example.com" --must-change-password=false\' || true) &&
  #       (su git -c \'rm -rf /tmp/gatekeeper-library\') &&
  #       (su git -c \'gitea dump-repo --git_service github --clone_addr https://github.com/riteshja/gatekeeper-library --units issues,labels --repo_dir /tmp/gatekeeper-library\') &&
  #       (su git -c \'touch /tmp/gatekeeper-library/topic.yml\') &&
  #       (su git -c \'gitea restore-repo --repo_dir /tmp/gatekeeper-library --owner_name administrator --units issues,labels --repo_name gatekeeper-library\' || true) &&
  #       (su git -c \'rm -rf /tmp/jupyter-demo\') &&
  #       (su git -c \'gitea dump-repo --git_service github --clone_addr https://github.com/snowch/jupyter-demo --units issues,labels --repo_dir /tmp/jupyter-demo\') &&
  #       (su git -c \'touch /tmp/jupyter-demo/topic.yml\') &&
  #       (su git -c \'gitea restore-repo --repo_dir /tmp/jupyter-demo --owner_name ad_user1 --units issues,labels --repo_name jupyter-demo\') || true
  #     giteasc_yml: |-
  #       ---
  #       apiVersion: v1
  #       stringData:
  #         authType: password #either of token or password. If token is selected, fill "token" field with token, otherwise "password" with password
  #         #token: my-github-token # fill this if authType is chosen as "token"
  #         password: \$(echo -n pass123 | base64) # fill this if authType is chosen as "password" - base64 encoded
  #         branch: master  
  #         email: ad_user1@samdom.example.com
  #         repoURL: http://{{ gitea_url.stdout }}/ad_user1/jupyter-demo.git  
  #         type: github   #either of "bitbucket" or "github"
  #         username: ad_user1 
  #         #proxyHostname: web-proxy.hpe.net #optional 
  #         #proxyPort: "8080" #optional 
  #         #proxyProtocol: http #http or https (optional)
  #       kind: Secret
  #       metadata:
  #         name: hpecp-sc-secret-gitea-ad-user1-nb
  #         labels:
  #           kubedirector.hpe.com/secretType: source-control
  #       type: Opaque
