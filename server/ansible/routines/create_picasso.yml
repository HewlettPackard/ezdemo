### create Picasso Server
- hosts: localhost

  tasks:
    - name: get masters
      shell: hpecp k8sworker get /api/v2/worker/k8shost/ -o json
      register: output
      ignore_errors: True
    - set_fact:
        workers: "{{ output.stdout | from_json }}"
    - set_fact:
        dfworker_ids: "{{ workers | json_query(dfquery) }}"
        aoworker_ids: "{{ workers | json_query(aoquery) }}"
      vars:
        dfquery: "_embedded.k8shosts[?datafabric]._links.self.href"
        aoquery: "_embedded.k8shosts[?!datafabric]._links.self.href"

    - name: set picasso on masters
      set_fact:
        picasso_list: "{{ dfworker_ids | map('regex_replace', '$', ':master') | list }}"

    - name: set addons on workers
      set_fact:
        worker_list: "{{ aoworker_ids | map('regex_replace', '$', ':worker') | list }}"

    - name: create host list
      set_fact:
        k8shost_list: "{{ picasso_list + worker_list }}"

    - name: creating picasso cluster
      shell: |-
        hpecp k8scluster create \
        --name dfcluster \
        --k8s_version "{{ k8s_version }}" \
        --k8shosts-config "{{ k8shost_list | join(',') }}" \
        --addons "{{ addons_list }}" \
        --ext_id_svr_bind_pwd "{{ bind_pwd }}" \
        --ext_id_svr_user_attribute "{{ user_attribute | default('sAMAccountName') }}" \
        --ext_id_svr_bind_type "{{ bind_type | default('search_bind') }}" \
        --ext_id_svr_bind_dn "{{ bind_dn | default('cn=Administrator,CN=Users,DC=samdom,DC=example,DC=com') }}" \
        --ext_id_svr_host "{{ ad_server | default(groups['ad_server'] | first | default([])) }}" \
        --ext_id_svr_group_attribute "{{ group_attribute | default('member') }}" \
        --ext_id_svr_security_protocol "{{ security_protocol | default('ldaps') }}" \
        --ext_id_svr_base_dn "{{ base_dn | default('CN=Users,DC=samdom,DC=example,DC=com') }}" \
        --ext_id_svr_verify_peer false \
        --ext_id_svr_type "{{ type | default('Active Directory') }}" \
        --ext_id_svr_port "{{ port | default(636) }}" \
        --external-groups "{{ external_groups | default(default_external_groups) }}" \
        --datafabric true \
        --datafabric-name=dfdemo
      vars: 
        addons_53: '["kubeflow", "picasso-compute"]'
        addons_54: '["spark-operator", "kubeflow", "istio"]'
        addons_list: "{{ addons_53 if (is_stable | bool) else addons_54 }}"
        default_external_groups: '["CN=DemoTenantAdmins,CN=Users,DC=samdom,DC=example,DC=com","CN=DemoTenantUsers,CN=Users,DC=samdom,DC=example,DC=com"]'
      # ignore_errors: yes

    - shell: "hpecp k8scluster list -o text | cut -d' ' -f1"
      register: cluster_id

    - name: waiting Picasso cluster
      shell: "hpecp k8scluster wait-for-status ''[ready]'' --id {{ cluster_id.stdout }} --timeout-secs 3600"

