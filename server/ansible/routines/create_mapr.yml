### Start MapR installation on first DF node
- hosts: "{{ (groups['mapr'] | first) | default([]) }}"
  tasks:
  - name: get mapr installer
    get_url:
      url: https://package.mapr.hpe.com/releases/installer/mapr-setup.sh
      dest: /tmp/mapr-setup.sh
      mode: '0755'

  - stat: path=/opt/mapr/installer/bin/mapr-installer-cli
    register: installer

  - name: setup mapr installer
    command: /tmp/mapr-setup.sh -y
    become: yes
    when: not installer.stat.exists
  
  - name: copy private key
    copy:
      src: "../../generated/controller.prv_key"
      dest: "~/controller.prv_key"
      mode: 0600

  - name: get hostnames
    shell: getent hosts "{{ item }}" | awk '{ print $2 }'
    with_items: "{{ groups['mapr'] }}"
    register: hostnames

  - set_fact:
      mapr_hosts: "{{ hostnames.results | map(attribute='stdout') | list }}"

  - shell: "fdisk -l | grep '500 GiB' | cut -d' ' -f2 | tr -d ':'"
    register: mapr_disks
    become: yes 

  # - name: disks.txt
  #   shell: echo "{{ mapr_disks.stdout }}" > /tmp/disks.txt

  - name: update stanza
    copy:
      dest: /tmp/mapr.stanza
      content: |-
        environment:
          mapr_core_version: 7.0.0
        config:
          hosts:
            - "{{ mapr_hosts[0] }}"
            - "{{ mapr_hosts[1] }}"
            - "{{ mapr_hosts[2] }}"
            - "{{ mapr_hosts[3] }}"
            - "{{ mapr_hosts[4] }}"
          ssh_id: {{ ansible_user_id }}
          ssh_key_file: "{{ ansible_user_dir }}/controller.prv_key"
          metrics_ui_admin_password: admin
          license_type: M5
          mep_version: 8.0.0
          disks:
            - "{{ mapr_disks.stdout_lines[0] }}"
            - "{{ mapr_disks.stdout_lines[1] }}"
            - "{{ mapr_disks.stdout_lines[2] }}"
          cluster_name: "{{ project_id | replace(' ', '_') }}.datafabric.io"
          services:
            mapr-hivemetastore:
              database:
                name: hive
                user: hive
                password: mapr

      force: yes

  - name: configure mapr
    command: bash -c 'echo y | sudo /opt/mapr/installer/bin/mapr-installer-cli install -nv -t /tmp/mapr.stanza'

  - name: create ticket for user
    shell: echo mapr | maprlogin password -user mapr

  - name: copy the license
    copy: src="../../LatestDemoLicense-M7.txt" dest="/tmp/LatestDemoLicense-M7.txt" mode="0644"
    ignore_errors: yes

  - name: install mapr license
    shell: |
      [ -f /tmp/LatestDemoLicense-M7.txt ] && maprcli license add -license /tmp/LatestDemoLicense-M7.txt -is_file true 
    ignore_errors: yes

- hosts: localhost
  tasks:
  - name: check socket file
    stat: path=/tmp/MCS-socket-admin
    register: socket_file
    
  - name: MCS tunnel for ports
    shell: "cd ../..; ssh -M -S /tmp/MCS-socket-{{ item.description }} -fNT -L 0.0.0.0:{{ item.port }}:{{ groups['mapr'] | first }}:{{ item.port }} centos@{{ groups['gateway'] | first }}"
    when: not socket_file.stat.exists and groups['gateway'] | length > 0
    with_items:
      - port: 8443
        description: admin
      - port: 9443
        description: installer
      - port: 8780
        description: airflow
      - port: 5601
        description: kibana
