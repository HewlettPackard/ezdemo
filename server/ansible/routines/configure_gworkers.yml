- hosts: localhost
  gather_facts: false
  tasks:
  - name: select nodes ## capture node name from Internal IP address
    shell: kubectl get nodes -o json | jq -r '.items[] | select( .status.addresses[].address == "{{ item }}") | .metadata.name'
    with_items: "{{ groups['gworkers'] }}"
    register: gnodes

  ### TODO: why do we need to do these on AWS GPU hosts?
  - name: drain gpu nodes
    shell: kubectl drain --ignore-daemonsets "{{ item.stdout }}"
    with_items: "{{ gnodes.results }}"
    register: result
    failed_when:
      - result.rc == 1
      - '"cordoned" not in result.stdout'

- hosts: gworkers
  gather_facts: false
  tasks:
  - name: remove file
    file:
      path: /var/lib/kubelet/cpu_manager_state
      state: absent
    become: yes

  - name: restart kubelet
    service: name=kubelet state=restarted enabled=yes
    become: yes

- hosts: localhost
  gather_facts: false
  tasks:
  ### TODO: why these are needed on AWS?
  - name: uncordon nodes
    shell: "kubectl uncordon {{ item.stdout }}"
    with_items: "{{ gnodes.results }}"
